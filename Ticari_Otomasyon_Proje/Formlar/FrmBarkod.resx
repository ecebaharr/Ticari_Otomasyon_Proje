<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Bcozumle.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Bolustur.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>